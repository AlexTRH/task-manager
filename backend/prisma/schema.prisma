generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(cuid())
  email     String         @unique
  name      String
  password  String
  avatar    String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  projects  Project[]      @relation("OwnerProjects")
  tasks     Task[]         @relation("UserTasks")
  tokens    RefreshToken[]

  @@map("users")
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  ownerId     String
  owner       User     @relation("OwnerProjects", fields: [ownerId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tasks       Task[]

  @@index([ownerId])
  @@map("projects")
}

model Task {
  id          String     @id @default(cuid())
  title       String
  description String?
  status      TaskStatus @default(TODO)
  projectId   String
  project     Project    @relation(fields: [projectId], references: [id])
  assigneeId  String?
  assignee    User?      @relation("UserTasks", fields: [assigneeId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@index([projectId])
  @@index([assigneeId])
  @@map("tasks")
}

model RefreshToken {
  id        String   @id @default(cuid())
  tokenHash String   @unique @map("token")
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  revoked   Boolean  @default(false)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId])
  @@map("refresh_tokens")
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}
